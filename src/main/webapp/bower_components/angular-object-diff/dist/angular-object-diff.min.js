!function(){"use strict";function n(n){function e(n){v=n}function a(n){b=n}function t(n,e,a,i){if(n===e)return c(n);var r={},s=!0;for(var f in n)if(!i&&f in e||i&&"undefined"!=typeof e&&e.hasOwnProperty(f))if(n[f]===e[f])r[f]=c(n[f]);else if(!a&&u(n[f],e[f])){var o=t(n[f],e[f],a,i);"equal"==o.changed?r[f]=c(n[f]):(s=!1,r[f]=o)}else s=!1,r[f]={changed:"primitive change",removed:n[f],added:e[f]};else s=!1,r[f]={changed:"removed",value:n[f]};for(f in e)(!i&&!(f in n)||i&&"undefined"!=typeof n&&!n.hasOwnProperty(f))&&(s=!1,r[f]={changed:"added",value:e[f]});return s?c(n):{changed:"object change",value:r}}function i(n,e,a){return t(n,e,a,!0)}function r(e,a){var t=[],i=e.value;if("equal"==e.changed)return n.trustAsHtml(p(i,a));for(var r in i)t.push(o(r,i[r],a));return n.trustAsHtml("<span>"+v+'</span>\n<div class="diff-level">'+t.join("<span>,</span>\n")+"\n</div><span>"+b+"</span>")}function s(e,a){return n.trustAsHtml(p(e,a))}function f(e,a){var t=[];if("equal"==e.changed)return"";var i=e.value;for(var r in i){var s=i[r].changed;"equal"!==s&&t.push(o(r,i[r],a,!0))}return n.trustAsHtml("<span>"+v+'</span>\n<div class="diff-level">'+t.join("<span>,</span>\n")+"\n</div><span>"+b+"</span>")}function c(n){return{changed:"equal",value:n}}function u(n,e){var a=typeof n,t=typeof e;return n&&e&&("object"==a||"function"==a)&&("object"==t||"function"==t)}function o(n,e,a,t){var i,s=e.changed;switch(s){case"equal":i=d(l(n))+"<span>: </span>"+p(e.value);break;case"removed":i='<del class="diff">'+d(l(n))+"<span>: </span>"+p(e.value)+"</del>";break;case"added":i='<ins class="diff">'+d(l(n))+"<span>: </span>"+p(e.value)+"</ins>";break;case"primitive change":var c=d(l(n))+"<span>: </span>";i='<del class="diff diff-key">'+c+p(e.removed)+'</del><span>,</span>\n<ins class="diff diff-key">'+c+p(e.added)+"</ins>";break;case"object change":i=a?"":d(n)+"<span>: </span>"+(t?f(e):r(e))}return i}function d(n){return/^[a-z0-9_$]*$/i.test(n)?n:JSON.stringify(n)}function l(n){return n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function p(n,e){function a(n,e,t){switch(typeof e){case"object":if(!e){n+="null";break}if(t){n+="[object]";break}var i=Object.keys(e),r=i.length;if(0===r)n+="<span>"+v+b+"</span>";else{n+="<span>"+v+'</span>\n<div class="diff-level">';for(var s=0;r>s;s++){var f=i[s];n=a(n+d(l(f))+"<span>: </span>",e[f]),r-1>s&&(n+="<span>,</span>\n")}n+="\n</div><span>"+b+"</span>"}break;case"string":n+=JSON.stringify(l(e));break;case"undefined":n+="undefined";break;default:n+=l(String(e))}return n}return a("",n,e)}var v="{",b="}",g={setOpenChar:e,setCloseChar:a,diff:t,diffOwnProperties:i,toJsonView:r,objToJsonView:s,toJsonDiffView:f};return g}function e(n){return function(e){return n.toJsonView(e)}}function a(n){return function(e){return n.toJsonDiffView(e)}}function t(n){return function(e){return n.objToJsonView(e)}}angular.module("ds.objectDiff",[]).factory("ObjectDiff",n).filter("toJsonView",e).filter("toJsonDiffView",a).filter("objToJsonView",t),n.$inject=["$sce"],e.$inject=["ObjectDiff"],a.$inject=["ObjectDiff"],t.$inject=["ObjectDiff"]}();
//# sourceMappingURL=angular-object-diff.min.js.map
